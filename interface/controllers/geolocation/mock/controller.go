// Code generated by MockGen. DO NOT EDIT.
// Source: go-ddd/interface/controllers/geolocation (interfaces: Controller)

// Package mock is a generated GoMock package.
package mock

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	httprouter "github.com/julienschmidt/httprouter"
)

// MockController is a mock of Controller interface.
type MockController struct {
	ctrl     *gomock.Controller
	recorder *MockControllerMockRecorder
}

// MockControllerMockRecorder is the mock recorder for MockController.
type MockControllerMockRecorder struct {
	mock *MockController
}

// NewMockController creates a new mock instance.
func NewMockController(ctrl *gomock.Controller) *MockController {
	mock := &MockController{ctrl: ctrl}
	mock.recorder = &MockControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockController) EXPECT() *MockControllerMockRecorder {
	return m.recorder
}

// GetLocationDataForIP mocks base method.
func (m *MockController) GetLocationDataForIP(arg0 http.ResponseWriter, arg1 *http.Request, arg2 httprouter.Params) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetLocationDataForIP", arg0, arg1, arg2)
}

// GetLocationDataForIP indicates an expected call of GetLocationDataForIP.
func (mr *MockControllerMockRecorder) GetLocationDataForIP(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLocationDataForIP", reflect.TypeOf((*MockController)(nil).GetLocationDataForIP), arg0, arg1, arg2)
}
